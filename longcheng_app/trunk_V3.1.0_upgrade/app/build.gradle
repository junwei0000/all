apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'
apply plugin:'com.tendcloud.codelessplugin'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.longcheng.lifecareplan"
        //最低版本
        minSdkVersion rootProject.ext.minSdkVersion
        //标记版本
        targetSdkVersion rootProject.ext.targetSdkVersion
        //版本号
        versionCode rootProject.ext.versionCode
        //版本名称
        versionName rootProject.ext.versionName
        multiDexEnabled true

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
                //选择要添加的对应CPU类型的so
//                abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
                abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
                //还可以选择'x86', 'x86_64', 'mips', 'mips64'
            }
        }

        ndk {
            //选择要添加的对应CPU类型的so
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            //还可以选择'x86', 'x86_64', 'mips', 'mips64'
        }

        /** 用户配置 */
        manifestPlaceholders = [
                JPUSH_PKGNAME: "com.longcheng.lifecareplan",
                JPUSH_APPKEY : "e3a8c1000fe1dbe69f9960a1", // JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", // 暂时填写默认值即可.
//                HWPUSH_APPID : "HWPUSH_APPID", // HWPush上注册的包名对应的APPID.
        ]
    }
    //忽略打包过程中的问题
    lintOptions {
        //所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds false
        //错误发生后停止gradle构建
        abortOnError false
    }
    //******************************************************************
    //配置签名信息,,,signingConfigs必须在 buildTypes前面声明，否则会出现找不到配置选项的错误。
    signingConfigs {
        release {
            storeFile file("../appkey/lifecare.jks")
            storePassword "lifeCARE_lc"
            keyAlias "lifecareplan"
            keyPassword "LIFEcare_LC"
        }
    }
    buildTypes {
        debug {
            minifyEnabled true
            zipAlignEnabled true //  Zip 优化
            shrinkResources true    // 移除无用的resource文件
            //启用multidex的支持
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            signingConfig signingConfigs.release
            minifyEnabled true
            zipAlignEnabled true //  Zip 优化
            shrinkResources true    // 移除无用的resource文件
            //启用multidex的支持
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "company" // 多维度设置

    productFlavors {
        huzhu {
            dimension "company"

//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huzhu"]
        }
//        txbao {
//            manifestPlaceholders = [MTA_CHANNEL_VALUE: "txbao"]
//        }
//        huawei {
//            manifestPlaceholders = [MTA_CHANNEL_VALUE: "huawei"]
//        }
//
//        xiaomi {
//            manifestPlaceholders = [MTA_CHANNEL_VALUE: "xiaomi"]
//        }
//        google {
//            manifestPlaceholders = [MTA_CHANNEL_VALUE: "google"]
//        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date()
            def formattedDate = date.format('yyyyMMdd',TimeZone.getTimeZone("UTC"))
            def fileName = "Cannel_${defaultConfig.versionName}_${formattedDate}_${variant.productFlavors[0].name}_release.apk"
            outputFileName = fileName
        }
    }

    //******************************************************************
    //支持1.8lame表达式
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    // 集成短视频商业版需要添加 packagingOptions，非商业版不需要
    packagingOptions {
        pickFirst '**/libc++_shared.so'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        //rxjava 自动匹配高版本的方法
        exclude 'META-INF/rxjava.properties'
    }
//    dexOptions {
//        dexInProcess true
//        preDexLibraries true
//        javaMaxHeapSize "6g"
//    }
}

dependencies {
//    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation fileTree(include: ['*.aar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:appcompat-v7:$rootProject.ext.appcompatVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.appcompatVersion"
    implementation "com.android.support:design:$rootProject.ext.appcompatVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle:$rootProject.ext.rxlifecycle"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:$rootProject.ext.rxlifecycle"
    implementation "com.jakewharton:butterknife:$rootProject.ext.butterKfVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterKfVersion"
    implementation "com.huawei.android.hms:push:$rootProject.ext.HWPushVersion"
    implementation "com.android.support:multidex:$rootProject.ext.multidexVersion"
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"
    testCompile 'junit:junit:4.12'
    implementation 'com.alibaba:fastjson:1.2.44'
    implementation 'com.github.lzyzsd:jsbridge:1.0.4'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'cn.finalteam:okhttpfinal:2.0.7'
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    //圆角image
    implementation 'com.makeramen:roundedimageview:2.2.1'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    //腾讯云直播，短视频，弹幕，超级播放器
    implementation "com.tencent.liteav:LiteAVSDK_Professional:latest.release"
    implementation 'com.github.ctiao:DanmakuFlameMaster:0.5.3'

    implementation 'com.github.castorflex.verticalviewpager:library:19.0.1'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.16'
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    compile(name: 'meglive_still', ext: 'aar')
    //美洽聊天的依赖
    implementation 'com.meiqia:meiqiasdk:+'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //dingwei--------------------------
    compile 'com.amap.api:3dmap:latest.integration'//3D地图so及jar
    compile 'com.amap.api:search:latest.integration'//搜索
    compile 'com.amap.api:location:latest.integration'//定位

    //socket.io-------------------
    compile ('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }

    implementation project(':pulltorefreshlibrary')
    implementation project(':calendarview')
    implementation project(':videouploader')
    implementation project(':libsuperplayer')

    implementation 'com.openxu.viewlib:OXViewLib:1.0.2'

    implementation 'com.hyman:flowlayout-lib:1.1.2' // 选择标签

}
